class BankAccount:
    def __init__(self, account_holder, balance=0):
        self.__account_holder = account_holder
        self.__balance = balance

    def deposit(self, amount):
        if amount > 0:
            self.__balance += amount
            print(f"Deposited ${amount}. New balance: ${self.__balance}")
        else:
            print("Invalid deposit amount.")

    def withdraw(self, amount):
        if 0 < amount <= self.__balance:
            self.__balance -= amount
            print(f"Withdrew ${amount}. New balance: ${self.__balance}")
        else:
            print("Invalid withdrawal amount or insufficient funds.")

    def get_balance(self):
        return self.__balance

    # Private method for internal use
    def __calculate_interest(self):
        # Assume a simple interest rate of 2%
        return self.__balance * 0.02

    # Public method to display interest
    def display_interest(self):
        interest = self.__calculate_interest()
        print(f"Interest accrued: ${interest}")


# Usage of the BankAccount class
account = BankAccount("John Doe", 1000)

account.deposit(500)
account.withdraw(200)

# The following line would result in an error because __calculate_interest is private
# account.__calculate_interest()

# Accessing the interest through the public method
account.display_interest()
