#optimal
class Solution(object):
    def moveZeroes(self, nums):
        """
        :type nums: List[int]
        :rtype: None Do not return anything, modify nums in-place instead.
        """
        i=0
        for j in range(1,len(nums)):
            if nums[i]==0 and nums[j]!=0:
                nums[i],nums[j]=nums[j],nums[i]
                i+=1
            elif nums[i]!=0:
                i+=1

#brute approach
class Solution(object):
    def moveZeroes(self, nums):
        """
        Move all zeros to the end of the array while maintaining the relative order of non-zero elements.

        :type nums: List[int]
        :rtype: None. Modify nums in-place.
        """
        # Create a list to store non-zero elements
        non_zero_list = []
        
        # Append all non-zero elements to non_zero_list
        for num in nums:
            if num != 0:
                non_zero_list.append(num)
        
        # Update nums with non-zero elements followed by zeros
        for i in range(len(non_zero_list)):
            nums[i] = non_zero_list[i]
        
        # Fill remaining positions with zeros
        for i in range(len(non_zero_list), len(nums)):
            nums[i] = 0

